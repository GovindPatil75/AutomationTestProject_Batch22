Automation Testing :
-----------------------------
Testing any application feature with the help of Automation tool 

Automation Tool
-------------------
Sahi
Sahi pro
Appium
Protector
Selenium 

Manual Testing DisAdv :
----------------------------------
1. required more resources 
2.Time consuming 
   Regression Testing --required more time /its time consuming 
   CrossBrowser Testing -- Chrome 5 min ---> 25 min --Difficult and its time consuming 
3.Test Cycle duration -increase 


Automation Testing Adv
---------------------------------
1. required less resources 
2.less time required 
    Regression ---650 (Test Script =Test cases step --Code )--> 2 days 
    CrossBowser Testing --2 min and easy 
3.Test Cycle Duration -deacrease 

================================================================
Selenium :
Why ?

1. Open source -- no licenece required 
2.support multiple lanaguages ---> Java ,C#,pearl,Rubby,Python ,JavaScript ....
3. support multiple Operating System 
4.CrossBrowser Testing - easy 

Dis Advantage :
---------------------
1. We can automate only Web Based Application .--> standalone/Desktop we can not automate
2.captcha ,Barcode -- we can not automate 
3. file upload and Download - we can not handle using selenium ---> AutoIT, Robot class

=========================================================

Selenium WebDriver Arch 

Search context (I)----> WebDriver (I)--->Remote WebDriver class (C) ---> Multiple Browser Driver classes (C)

==========================================================================

Project -- Maven -- Build Management Tool 

src/main/java
src/main/resources 
src/test/java
src/test/resources 
pom.xml  -----> dependancy ---> Selenium / Executable setup --> WebDriverManager


https://mvnrepository.com/

===================================================================

Test cases --->
Test cases--> Manually Test ---> Testing Jira Ready for demo -Review test cases with PO -->25 --5 TC Regression 2 CR

=============================================



webElement--- Anything on WebPage EX. Text field ,button ,link ,logo ,Image ,Text

Locators -- we identify the webElement 

8 Type 
--------------
1.Name 
2.Id
3.ClassName
4.Xpath
5.Tagname
6.Css
7.Linktext
8.partaillinktext

WebElement Email=driver.findElement(By.name("email"));
Email.sendKeys("Test@gmail.com");

WebElement password=driver.findElement(By.name("pass"));
password.sendKeys("12345678");

WebElement loginBtn=driver.findElement(By.name("login"));
loginBtn.click();

======================================================
Id -- Locators WebElement Identify 

WebElement Element =driver.findElement(By.id("Value"));

WebElement Email=driver.findElement(By.Id("email"));
Email.sendKeys("Test@gmail.com");

=======================================================
Xpath Locators 

Tagname == < after this EX . <input <a <button

attributename="Attribute value" =EX =name="pass"

>Text<
EX = >Forgotten password?<

Absloute Xpath :(/)
-----------------------
Parent node ---immidiate child node ---->Element

WebElement element=driver.findElement(By.xpath("/html/body/div[1]/div[1]/div[1]/div/div/div/div[2]/div/div[1]/form/div[1]/div[1]/input"));
A->B->C ->E ->D
A->B-C->D
Relative XPath 

=============================================
Relative Xpath (//)

-->Parent to any child /  Child 

Xpath by Attribute :
----------------------
//tagname[@attribute name='attribute value']
//input[@name='email']
//input[@name='pass']
WebElement Email=driver.findElement(By.xpath("//input[@name='email']"));

WebElement password=driver.findElement(By.xpath("//input[@name='pass']"));

WebElement LoginBtn=driver.findElement(By.xpath("//button[@name='login']"));


Xpath By Text ()  ;
===========================

//tagname[text()='Text value']
//a[text()='Forgotten password?']

WebElement ForgottenPwd=driver.findElement(By.xpath("//a[text()='Forgotten password?']"));

===============================================
Xpath By contains() :
---------------------
attribute
//tagname[contains(@attribute name,'static value')]
//button[contains(@id,'u_0_5_')]

WebElement loginBtn=driver.findElement(By.xpath("//button[contains(@id,'u_0_5_')]"));

text :
//tagname[contains(text(),'static value')]
//a[contains(text(),'Forgotten ')]

WebElement fp=driver.findElement(By.xpath("//a[contains(text(),'Forgotten ')]"));

-------------------------------------------------
Xpath By Index

(xpath expression)[index]

(//input[@type='text'])[3]

WebElement Surname=driver.findElement(By.xpath("(//input[@type='text'])[3]"));
Surname.action
=====================================================

List<WebElement> Elementlist=driver.findElements(By.xpath("//input[@type='text']"));
Elementlist.size(); // count -7

Elementlist.getindex(i).action
===================================================
How to Handle DropDown
----------
Select Class ----> Element tag name select 

Object create of Select class

WebElement element=driver.findElement(By.xpath("Xpath Expression"));
Select sel=new Select(element);

sel.selectByIndex(7);

===============
List<WebElement> list=sel.getOptions();

list.size(); // count

for(int i=0;i<list.size();i++) {
			
			String Option=list.get(i).getText();
			System.out.println(Option);
			
		}
		==========================================
		
		SC ->WB,TS,JSE->RWC-> MBDC
		How to Capture Screenshot (Full page )
		
TakesScreenshot ts=driver;		//WebDriver driver 
File src=ts.getscreenshotAs(outputType.File);	

File destn=new File(location\\test.png);	

FileUtils.copyFile(src,destn);
		
=======================================================

Actions class :

Mouse Movement and Keyboard actions 

Element -Hover
Element Hover +Click
Element Hover +Option click

Double click
Right click 
DragandDrop

Ctrl+a ctrl+C  --Ctrl+v

Actions act=new Actions(driver);
act.movetoElement(element).click().build().perform();

DragAndDrop 
----------------
git download ---> git bash --> remote repo project --clone --local repo 

git clone remoteUrl
----------------------------------------
element.sendkeys("Test@gmail.com");

Excel Sheet ---Test Data ---> read ---> provide WebElement 

Apache POI --- 2 dependancy 

String path="location.xlsx" // 

FileInputStream fis=new FileInputStream(path);

XSSFWorkbook wb=new XSSFWorkbook(fis);

String Data=wb.getsheet("LoginTest").getrow(0).getcell(1).getStringcellvalue();

weblement.sendKeys(Data);
===========================================

Alert : 

simple alert -- warning --
prompt Alert -- user input -sendkeys()
Confirmation Alert -- 

Alert alt =driver.switchto().Alert();
alt.gettext(); // Alert text 

alt.dismiss(); // cancel click
alt.accept(); // Ok button 
----------------------------





























		
		
		






































