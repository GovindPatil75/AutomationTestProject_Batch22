<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="11" passed="8" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-05T09:12:27 IST" name="DemoSuite" finished-at="2023-12-05T09:12:27 IST" duration-ms="140">
    <groups>
    </groups>
    <test started-at="2023-12-05T09:12:27 IST" name="DemoTest" finished-at="2023-12-05T09:12:27 IST" duration-ms="140">
      <class name="TestDemo_2.Test_ng2">
        <test-method signature="m1()[pri:0, instance:TestDemo_2.Test_ng2@2805d709]" started-at="2023-12-05T09:12:27 IST" name="m1" finished-at="2023-12-05T09:12:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m1 -->
        <test-method signature="m2()[pri:0, instance:TestDemo_2.Test_ng2@2805d709]" started-at="2023-12-05T09:12:27 IST" name="m2" finished-at="2023-12-05T09:12:27 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2 -->
        <test-method signature="m3()[pri:0, instance:TestDemo_2.Test_ng2@2805d709]" started-at="2023-12-05T09:12:27 IST" name="m3" finished-at="2023-12-05T09:12:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m3 -->
      </class> <!-- TestDemo_2.Test_ng2 -->
      <class name="TestDemo_2.Test_ng3">
        <test-method signature="p1()[pri:0, instance:TestDemo_2.Test_ng3@3ee37e5a]" started-at="2023-12-05T09:12:27 IST" name="p1" finished-at="2023-12-05T09:12:27 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- p1 -->
      </class> <!-- TestDemo_2.Test_ng3 -->
      <class name="TestDemo_2.Test_ng1">
        <test-method signature="pqr()[pri:0, instance:TestDemo_2.Test_ng1@618425b5]" started-at="2023-12-05T09:12:27 IST" name="pqr" finished-at="2023-12-05T09:12:27 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pqr -->
        <test-method signature="pqr()[pri:0, instance:TestDemo_2.Test_ng1@618425b5]" started-at="2023-12-05T09:12:27 IST" name="pqr" finished-at="2023-12-05T09:12:27 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pqr -->
        <test-method signature="pqr()[pri:0, instance:TestDemo_2.Test_ng1@618425b5]" started-at="2023-12-05T09:12:27 IST" name="pqr" finished-at="2023-12-05T09:12:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pqr -->
        <test-method signature="xyz()[pri:1, instance:TestDemo_2.Test_ng1@618425b5]" started-at="2023-12-05T09:12:27 IST" name="xyz" finished-at="2023-12-05T09:12:27 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xyz -->
        <test-method signature="LoginTest()[pri:2, instance:TestDemo_2.Test_ng1@618425b5]" started-at="2023-12-05T09:12:27 IST" name="LoginTest" finished-at="2023-12-05T09:12:27 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at TestDemo_2.Test_ng1.LoginTest(Test_ng1.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method signature="HomepageTest()[pri:3, instance:TestDemo_2.Test_ng1@618425b5]" started-at="2023-12-05T09:12:27 IST" name="HomepageTest" finished-at="2023-12-05T09:12:27 IST" depends-on-methods="TestDemo_2.Test_ng1.LoginTest" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Test_ng1.HomepageTest()[pri:3, instance:TestDemo_2.Test_ng1@618425b5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Test_ng1.HomepageTest()[pri:3, instance:TestDemo_2.Test_ng1@618425b5] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HomepageTest -->
      </class> <!-- TestDemo_2.Test_ng1 -->
    </test> <!-- DemoTest -->
  </suite> <!-- DemoSuite -->
</testng-results>
